<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="141.421">
            <Box name="JeeachintoClient" id="1" localization="8" tooltip="" x="213" y="87">
              <bitmap>media/images/box/internet/internet.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import sys, os, time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        sys.path.append(os.path.join(self.behaviorAbsolutePath(),"lib"))
        from jeeachinto import Client
        self.client = Client(self.getParameter("Server IP"))
        self.connected = False

    def onUnload(self):
        if self.connected:
            self.client.close()
        self.client = None

    def onInput_onStart(self):
        if not self.connected:
            try:
                self.client.connect(self.getParameter("robotname"))
            except Exception:
                self.client.connect(self.getParameter("robotname"))
            try:
                self.client.sendto(str(time.time()), "useless")
            except Exception:
                pass
            self.connected = True
        while self.client:
            time.sleep(0.1)
            self.recv(self.client.listen())

    def onInput_close(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box

    def onInput_send(self, p):
        if self.connected:
            self.client.sendto(*p)]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="close" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
              <Input name="send" type="0" type_size="1" nature="1" inner="0" tooltip="" id="4" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
              <Output name="recv" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" />
              <Parameter name="Server IP" inherits_from_parent="0" content_type="3" value="10.2.0.70" default_value="10.2.0.70" custom_choice="0" tooltip="" id="7" />
              <Parameter name="robotname" inherits_from_parent="0" content_type="3" value="pepper1-virtual" default_value="robot" custom_choice="0" tooltip="" id="8" />
            </Box>
            <Box name="Log" id="2" localization="8" tooltip="Prompt the message in the debug window. You can set a prefix and a priority&#x0A;for the message in the parameters." x="347" y="144">
              <bitmap>media/images/box/print.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_message(self, p):
        sPriority = self.getParameter("Priority")
        sMessage = self.getParameter("Message prefix")
        if( sMessage != "" and p != None ):
            sMessage += ": "
        if( p != None ):
            sMessage += str(p)
        if( sPriority == "Fatal" ):
            self.logger.fatal( sMessage )
        elif( sPriority == "Error" ):
            self.logger.error( sMessage )
        elif( sPriority == "Warning" ):
            self.logger.warning( sMessage )
        elif( sPriority == "Info" ):
            self.logger.info( sMessage )
        elif( sPriority == "Debug" ):
            self.logger.debug( sMessage )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="message" type="0" type_size="1" nature="1" inner="0" tooltip='The message to print or a &quot;Bang&quot; to only print the message set as parameter.' id="2" />
              <Output name="onDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Message prefix" inherits_from_parent="0" content_type="3" value="Message text" default_value="Message text" custom_choice="0" tooltip="Enter the text you want to print before the input message." id="4" />
              <Parameter name="Priority" inherits_from_parent="0" content_type="3" value="Info" default_value="Info" custom_choice="0" tooltip="Enter the priority of your message. If you select error, the box will get red when it will be stimulated." id="5">
                <Choice value="Fatal" />
                <Choice value="Error" />
                <Choice value="Warning" />
                <Choice value="Info" />
                <Choice value="Debug" />
              </Parameter>
            </Box>
            <Box name="sendto" id="3" localization="8" tooltip="" x="82" y="169">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_data(self, p):
        self.out((self.getParameter("to"),p))
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="data" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" />
              <Output name="out" type="0" type_size="1" nature="2" inner="0" tooltip="" id="3" />
              <Parameter name="to" inherits_from_parent="0" content_type="3" value="virtual_pc" default_value="robotname" custom_choice="0" tooltip="" id="4" />
            </Box>
            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="6" />
            <Link inputowner="1" indexofinput="4" outputowner="3" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
